# Dane Van Domelen
# October 3, 2016

# R script for ShareTheMeal totals over time

# Enter cumulative totals for each day at 11:00 PM (sometimes a little off)
dates <- seq(as.Date("2016-09-19"), as.Date("2018-02-21"), 1)
meals <- c(8112767, 8124026, 8135121, 8147734, 8158852, 8174682,
           8181991, 8191528, 8201580, 8210620, 8222176, 8236822,
           8252711, 8268917, 8281542, 8294586, 8303917, 8317456,
           8331444, 8344380, 8358600, 8371000, 8407379, NA, 8455651,
           8489644, 8523206, 8592784, 8623783, 8649089, 8670663,
           8687740, 8709197, NA, 8740212, 8759536, 8773036, 8784760,
           8801575, 8816294, 8831145, 8846244, 8861354, 8894794,
           8914618, 8928203, 8943118, 8957910, 8974239, 8988737,
           9001425, 9024718, 9037809, 9052918, 9065963, 9078456,
           9093436, 9108752, 9123189, 9137972, 9154117, 9165690,
           9181900, 9198138, 9209090, 9229335, 9258897, 9277847,
           9293202, 9307878, 9324049, 9354896, 9378058, 9397972,
           9424501, 9444822, 9460951, 9475363, 9491529, 9507573,
           9523677, NA, 9556031, 9579134, 9609987, 9628366, 9644522,
           9664699, 9683236, 9698583, 9717389, 9734108, 9752108,
           9769684, 9804850, 9853681, 9907489, 9938818, 9966149,
           9983104, 9997917, 10015458, 10037123, 10087127, 10113096,
           10136271, 10150412, 10160914, 10172669, 10188333, 10219185,
           10234787, 10247138, 10259310, 10272615, NA, 10342217,
           10367793, 10383122, 10398300, 10427456, 10443026,
           10456634, 10471494, 10483467, 10495334, 10508649,
           10522597, 10536106, 10554598, 10571502, 10588768,
           10602679, 10616236, 10635879, 10652913, 10668998, NA, NA, 10711918,
           10738250, 10754398, 10773578, 10798053, 10834841, 10857191, 10878333,
           10906216, 10962967, 10990505,
           11007128, NA, 11038713, 11052609, 11069246, 11096922, 11115552,
           11140510, 11160144, 11174739, 11194737, 11209755, 11275544,
           11311697, 11351344, 11384572, 11417538, 11449183, 11474340,
           11510281, 11577320, 11602368, 11625033, 11680879, 11711763,
           11739115, 11769781, 11814063, 11843108, 11867976, 11894933,
           11920884, 11942300, 11960297, 11986676, 12032270, 12055978,
           12074159, 12090707, 12113627, 12150353, 12170728, 12200615,
           12231912, 12259387, 12283000, 12305516, 12327432, 12343595,
           12361561, 12382723, 12403456, 12420936, 12437431, 12459162,
           12479550, 12499702, 12521676, 12551266, 12591309, 12615575,
           12633104, 12649407, 12667181, 12684137, 12701385, 12733266,
           12748948, 12766814, 12781563, 12796592, 12818407, 12832809,
           12850571, NA, 12891100, 12908273, 12923658, 12938806, 12957452, 12976530,
           12991487, 13020848, 13041537, 13062489, 13077527, 13092816,
           13118589, 13135751, 13151753, 13164808, 13186598, NA, NA,
           13272632, 13291840, 13311493, 13327469, 13345730, 13374750,
           13418259, NA, 13475691, 13508793, 13550148, 13587277, 13619366,
           13649716, 13691310, 13736303, 13758461, 13779310, 13808477,
           NA, NA, 13943447, 13975579, 14003412, 14034616, 14072055,
           14106971, NA, 14161855, 14203782, 14277425, 14335670,
           14374918, 14411882, 14459305, 14498050, 14518893, 14534898,
           14563556, 14581521, NA, 14633218, 14658148, 14678207, 14715498,
           14742907, 14768016, 14794352, 14812808, 14861260, 14879414,
           14904279, 14920573, NA, 14933719, 14973125, 15001244, 15024402,
           15039703, 15054291, 15073345, 15087338, 15103198, 15123604,
           15139786, 15159355, 15173913, 15187567, 15204918, 15222533,
           15251949, 15269079, 15288120, 15304285, NA, 15335496, 15365141,
           NA, 15384475, 15405029, 15422313, 15439723, 15461887, NA, 15461887,
           15530267, 15561404, 15583407, 15596701, NA, 15662024, 15684388,
           15699736, 15711779, 15743168, 15765477, 15788602, 15804590, 15831588,
           15848783, 15865365, 15900597, 15932701, 15957861, 15990531, 16008889,
           16030799, NA, 16082206, 16102724, NA, 16152257, 16169435, 16188541,
           16204456, 16221631, 16245162, 16264304, 16278957, 16312646, 16328643,
           16345841, 16361842, 16383434, 16397446, 16411223, 16430817, NA,
           16457619, 16470896, 16496565, 16516464, NA, 16569000, 16587516,
           16604123, 16626578, 16639851, 16659948, 16673729, 16699365, 16713507,
           16726560, 16744757, 16768698, 16781808, NA, 16824248, 16874331, 16894090,
           16913365, 16931054, 16960211, 16975710, NA, 17055871, 17104632,
           17119841, 17153752, 17181700, 17198628, 17232782, 17260824,
           17278426, 17297428, 17343306, 17363660, 17384312 , 17419570,
           17438786, 17474100, 17492876, 17522434, 17545356, 17565928, 17594740,
           17619227, 17639468, 17659359, 17683684, NA, 17721710, 17749988,
           17769086, 17782702, 17805500, NA, 17876468, 17899016, 17946534,
           17968320, 18022148, 18071924, 18102496, 18129662, 18150292, 18193070,
           NA, 18233448, 18261232, 18291658, NA, 18348674, 18373974, 18392812,
           18415094, 18435952, 18467214, 18512764, 18535422, NA, 18600694,
           NA, NA, 19107204, 19157672, 19215094, 19337616, 19421658, NA,
           19535152, NA, NA, NA, 19755620, NA, 19849664, NA, NA, NA, 19961184,
           NA, NA, NA, 20052656, 20072488, NA, NA, NA, 20162714, 20185032,
           20206772, NA, 20252780, NA, 20308016, NA, NA, 20362104, NA, NA,
           NA, NA, NA, 20502957, 20523528, NA, NA, NA, NA, NA, 20681452, NA,
           20701424, NA, NA, NA, NA, 20850328, NA, 20927104, NA, 20969400, NA,
           NA, 21039508, 21066670)

# Plot cumulative meals over time
plot(dates, meals)

# NEED TO FIX THIS
# Calculate meals donated each day. Use a simple interpolation method for missing days.
daily.totals <- diff(meals)
# locs <- which(is.na(daily.totals))
# locs <- locs[seq(1, length(locs), 2)]
# for (ii in 1: length(locs)) {
#   loc <- locs[ii]
#   before <- meals[loc]
#   after <- meals[loc+2]
#   daily.totals[loc: (loc + 1)] <- (after - before)/2
# }

# Look at distribution of daily meals donated, and plot over time.
hist(daily.totals)
mean(daily.totals, na.rm = T)
plot(dates[-1], daily.totals, ylim = c(0, 80000))
daily.totals[which(dates %in% as.Date(c("2016-11-24", "2017-11-23"))) - 1]
daily.totals[which(dates %in% as.Date(c("2016-11-29", "2017-11-28"))) - 1]

# Look at meals donated each month
library("lubridate")
month.year.01 <- as.Date(paste(year(dates), month(dates), "01", sep = "-"))
monthly.means <- tapply(daily.totals, month.year.01[-1], function(x) mean(x, na.rm = T))
plot(monthly.means, ylim = c(0, max(monthly.means) * 1.05), pch = 16)
fit <- lm(monthly.means ~ c(1: length(monthly.means)))
summary(fit)
monthly.means[length(monthly.means)] / monthly.means[1]

# Test whether meals donated per day is increasing
fit <- lm(daily.totals ~ c(1: length(daily.totals)))
summary(fit)
hist(fit$residuals)

# Plot of monthly meals over time
plot(1: length(monthly.means), monthly.means,
     main = "Average Meals/Day by Month",
     ylab = "Average meals per day",
     xlab = "Month")
summary(lm(monthly.means ~ c(1: length(monthly.means))))
summary(lm(monthly.means ~ poly(c(1: length(monthly.means)), 2, raw = TRUE)))
fit <- lm(monthly.means ~ poly(c(1: length(monthly.means)), 2, raw = TRUE))
xvals <- seq(1, length(monthly.means), 0.1)
yvals <- fit$coef[1] + fit$coef[2] * xvals + fit$coef[3] * xvals^2
points(xvals, yvals, type = "l", col = "blue")

legend("topleft", legend = "Y = 15676 + 1013X", lty = 1, col = "blue")




abline(fit, col = "blue")

abc <- means.graph(y = daily.totals, group = month.year.01[-1])


#par(mar = c(4.1, 4.1, 4.1, 1.1))
plot(unique(month.year.01), monthly.means,
     main = "Monthly meals", xaxt = "n")
plot.dates <- dates[-1]
plot(plot.dates, daily.totals, type = "p", lty = 2, main = "ShareTheMeal Donations",
     xlab = "Date", ylab = "Meals donated", cex.main = 1.25, xaxt = "n",
     xlim = c(min(dates) - 1, max(dates) + 1), ylim = c(0, max(daily.totals, na.rm = T) * 1.05),
     pch = 16, cex.lab = 1.2, cex.main = 1.3, cex = 0.8, lwd = 0.5, frame.plot = TRUE)


# fit <- rlm(daily.totals ~ c(1: length(daily.totals)))
# summary(fit)
# names(fit)
# beta.hat <- fit$coef
# vcov.hat <- summary(fit)$cov.unscaled
# vcov.hat

# Let lmRob function decide on appropriate method - usually MM
library("robust")
rfit <- lmRob(daily.totals ~ c(1: length(daily.totals)))
summary(rfit)


fit <- lm(daily.totals ~ c(1: length(daily.totals)))
summary(fit)

fit <- lm(daily.totals ~ poly(c(1: length(daily.totals)), 2, raw = TRUE))
summary(fit)


# Create pdf
setwd("C:/Users/Dane/Google Drive/Documents/Misc/charity")
png(filename = "sharethemeal_3_9_17.png", width = 6, height = 6, units = "in", res = 500)
par(mar = c(4.1, 4.1, 4.1, 1.1))
plot.dates <- dates[-1]
plot(plot.dates, daily.totals, type = "p", lty = 2, main = "ShareTheMeal Donations",
     xlab = "Date", ylab = "Meals donated", cex.main = 1.25, xaxt = "n",
     xlim = c(min(dates) - 1, max(dates) + 1), ylim = c(0, max(daily.totals, na.rm = T) * 1.05),
     pch = 16, cex.lab = 1.2, cex.main = 1.3, cex = 0.8, lwd = 0.5, frame.plot = TRUE)

# Add moving average curve
daily.totals.ave <- c()
window.length <- 10
for (ii in window.length: length(daily.totals)) {
  daily.totals.ave[ii - window.length + 1] <- mean(daily.totals[(ii - window.length + 1): ii], na.rm = T)
}
points(plot.dates[-c(1: (window.length - 1))], daily.totals.ave, type = "l", col = "blue")
legend("bottomright", lty = 1, col = "blue", legend = "10-day moving average")

# Add regression line
#fit <- lm(daily.totals ~ plot.dates)
#abline(fit, col = "red")

##arrows(x0 = dates[length(dates)-17], y0 = 45000, x1 = dates[length(dates)], y1 = daily.totals[length(daily.totals)])
#abline(h = median(daily.totals, na.rm = T), lty = 2)
##text(x = dates[length(dates)-17], y = 48000, labels = paste(daily.totals[length(daily.totals)], " meals today!", sep = ""), cex = 0.9, col = "blue")
xtick.locs <- which(day(plot.dates) == 1)
axis(side = 1, at = plot.dates[xtick.locs], labels = as.character(plot.dates[xtick.locs]), cex.axis = 0.7, las = 1)

#text(x = dates, y = -70, srt = 40, xpd = T, labels = datestrings, cex = 0.7)
#text(x = dates, y = totalsum + c(30, 18, 30, 30, 30), labels = paste("(", winners, ")", sep = ""), cex = 0.75)
dev.off()


8920822-8914618

dates.full <- seq(as.Date("2015-11-12"), as.Date("2016-10-13"), 1)
meals <- rep(mean(daily.totals), length(dates.full))
plot(dates.full, cumsum(meals))
